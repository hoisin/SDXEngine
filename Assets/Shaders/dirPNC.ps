////////////////////////////////////////////////////////////////////////////////
// Filename: color.ps
////////////////////////////////////////////////////////////////////////////////


//////////////
// TYPEDEFS //
//////////////
struct PSInput
{
    float4 position : SV_POSITION;
	float3 normal : TEXCOORD1;
    float4 color : COLOR;
};

float3 lightDir;

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 Main(PSInput input) : SV_TARGET
{
	float3 normal = normalize(input.normal);
	
	float3 lightDir = float3(0, 0.6, -0.2);
	float len = length(lightDir);
	lightDir = normalize(lightDir);
	
	float lamb = max(dot(normal, lightDir), 0);
	
	// Cumulate lighting
	float3 color = lamb * input.color;

	// add ambient colour last
	color = float3(0.1,0,0) + color;
	
	float4 pix = float4(color.x, color.y, color.z, 0);
	
	return pix;
}


