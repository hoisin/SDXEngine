////////////////////////////////////////////////////////////////////////////////
// Filename: color.ps
////////////////////////////////////////////////////////////////////////////////


//////////////
// TYPEDEFS //
//////////////
struct PSInput
{
    float4 position : SV_POSITION;
	float3 normal : SV_NORMAL;
    float4 color : COLOR;
};

float3 lightDir;

////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 Main(PSInput input) : SV_TARGET
{
	float3 normal = normalize(norm);
	float3 lightDir = lightDir - position.xyz;
	
	float length = length(lightDir);
	lightDir = normalize(lightDir);
	
	float lamb = max(dot(normal, lightDir), 0.0) * 0.5;
	
	// Cumulate lighting
	colour += lamb * texture( diffuseTextureSampler, UV ).rgb; // * light colour

	// add ambient colour last
	color = float3(0.1,0,0) + colour;
	
	return input.color;
}


